@import url('https://fonts.googleapis.com/css2?family=Special+Elite&display=swap');
@import url('https://fonts.googleapis.com/css2?family=Noto+Sans:ital,wght@0,100..900;1,100..900&display=swap');

:root {
  /* breakpoints are set with Breakpoints.js */
  --content-border-radius: 20px;

  --colour-orange: #ee8e09;
  --colour-orange-50: #ffefde;
  --colour-orange-100: #ffdebe;
  --colour-orange-200: #ffce9e;
  --colour-orange-300: #febe7e;
  --colour-orange-400: #f49e3c;
  --colour-orange-500: #c97810;
  --colour-orange-600: #a56413;
  --colour-orange-700: #825014;
  --colour-orange-800: #412a11;
  --colour-orange-900: #341f02;
  --colour-blue: #b4d7e5;
  --colour-blue-50: #f4f9fb;
  --colour-blue-100: #eaf3f8;
  --colour-blue-200: #d4e8f0;
  --colour-blue-300: #cae2ec;
  --colour-blue-400: #bfdde9;
  --colour-blue-500: #98b5c1;
  --colour-blue-600: #7d949e;
  --colour-blue-700: #63757c;
  --colour-blue-800: #333a3e;
  --colour-blue-900: #142429;
  --colour-dark-bg: #242424;
  --colour-light-bg: #eef1f2;
  --colour-dark-text: #ede1e1;
  --colour-light-text: #242424;

  font-family: 'Noto Sans', Helvetica, Arial, sans-serif;
  line-height: 1.5;
  font-weight: 400;

  background-color: var(--colour-blue-300);

  color-scheme: light dark;

  --header-footer-time-colour: var(--colour-orange);
  --header-footer-time-colour-text: var(--colour-orange-900);
  /* color: rgba(255, 255, 255, 0.87);
  background-color: #242424; */

  font-synthesis: none;
  text-rendering: optimizeLegibility;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

*,
*::before,
*::after {
  box-sizing: border-box;
  /*hide scrollbars throughout the site to avoid the horrible affect on the layout when they appear - I think they are unneccessary with scroll wheels, trackpads, and finger controls?*/
  ::-webkit-scrollbar {
    display: none; /*Chrome, Safari and Opera */
  }
  -ms-overflow-style: none; /* IE and Edge */
  scrollbar-width: none; /* Firefox */
}

html {
  font-size: 62.5%;
}

body {
  margin: 0;
  padding: 0;
  height: 100dvh;
  width: 100vw;
  /*stop words from being broken as standard*/
  -webkit-hyphens: none;
  -moz-hyphens: none;
  -ms-hyphens: none;
  hyphens: none;
  line-height: 1.5;
  font-size: 1.6rem;
}

/* Main grid layout with header, main, and footer possible */
.main {
  /* Make it a fullscreeen area */
  margin: 0 auto;
  width: 100vw;
  height: 100dvh;

  padding: 0;
  display: grid;
  grid-template-rows: auto 1fr auto;
}

h1,
h2,
h3,
h4 {
  font-family: 'Special Elite', 'Courier New', Courier, monospace;
  font-weight: 400;
  font-style: normal;
  /* font-size: 2.2em;
  line-height: auto; */
}

#logo {
  font-size: 4.2rem;
  line-height: 80%;
  cursor: pointer;
}

a {
  color: inherit;
  text-decoration: none;
}

i {
  font-size: inherit;
  transform: translateY(2px);
}

.contact {
  display: flex;
  flex-direction: row;
  width: 100%;
  gap: 2rem;
  /* flex-wrap: nowrap; */
}

/* This holds the floater's #container element to allow for scrolling with a fixed header */
.scrollableMain {
  overflow-y: auto;
  height: 100%;
  width: 100%;
  pointer-events: all; /* this was needed to get the contents of the floaters scrolling as well as the main container (that's inside this!) */
}

/* The area that the floaters are attached to */
#container {
  display: block;
  flex: 1;
  width: 100%;
  margin: 0 auto;
  min-height: 100%;
  /* padding: 10px;
  height: fit-content; No! the floaters are not content because they are absolutely positioned so this will not work!!*/
  overflow: hidden; /* So it ignores the Floaters going out of the browser window*/
  /* transition: all 500ms ease; This is to smooth out changes to it's height */
}

/* 
This is all of the styling for the navigation system ------------------------------------
*/
#nav-holder {
  position: relative;
  margin-right: 0;
}

#hamburger-button {
  position: relative;
  width: 2.5rem;
  height: 2.5rem;
  margin-right: 2rem;
  cursor: pointer;
}

#hamburger-button span {
  position: absolute;
  background-color: var(--header-footer-time-colour-text);
  /* var(--colour-light-text); */
  width: 100%;
  height: 3px;
  border-radius: 25px;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  transition: 0.3s ease;
}
#hamburger-button span:nth-child(1) {
  top: 25%;
}
#hamburger-button span:nth-child(3) {
  top: 75%;
}
#hamburger-button.active span:nth-child(1) {
  top: 50%;
  transform: translate(-50%, -0%) rotate(45deg);
}
#hamburger-button.active span:nth-child(2) {
  opacity: 0;
}
#hamburger-button.active span:nth-child(3) {
  top: 50%;
  transform: translate(-50%, 0%) rotate(-45deg);
}

#main-nav {
  position: absolute;
  z-index: 100;
  top: 4rem;
  right: 0;
  display: flex;
  justify-content: flex-end;
  align-items: center;
  gap: 1rem;
  padding: 1rem;
  width: 60vw;
  flex-wrap: wrap;
  height: fit-content;
  background-color: var(--header-footer-time-colour);
  border: 1px solid var(--header-footer-time-colour-text);
  /* don't allow clicking when it's hidden */
  pointer-events: none;
  border-radius: calc(var(--content-border-radius) / 2);
  visibility: hidden;
  opacity: 0;
  transition: 0.3s ease;
}

#main-nav.active {
  pointer-events: all !important;
  opacity: 1;
  visibility: visible;
}

@media screen and (max-width: 680px) {
  #main-nav {
    flex-direction: column;
    width: fit-content;
  }
}
/* It's time based now so no need
@media (prefers-color-scheme: light) {
  #main-nav {
    background-color: var(--colour-light-bg);
    border: 1px solid var(--colour-light-text);
  }
  #hamburger-button span {
    background-color: var(--colour-light-text);
  }
} */

.nav-button {
  font-family: 'Special Elite', 'Courier New', Courier, monospace;
  /* this is to make the buttons 'stretch' when there is excess space and when they wrap - a setting of 1 makes them all behave the same whereas 'auto' will make ones with smaller content be proportionally smaller than the others */
  flex: 1;
  white-space: nowrap;
  border: 1px solid;
  border-radius: 7px;
  padding: 0.4rem 0.8rem;
  font-size: 1.4rem;
  font-weight: 600;
  cursor: pointer;
  color-scheme: light dark;
  color: var(--colour-orange-900);
  background-color: var(--colour-blue);
  border-color: var(--colour-blue-100);
}

.nav-button.visited,
.nav-button:focus,
.nav-button:hover {
  outline: none;
  background-color: var(--colour-blue-100);
}

@media screen and (max-width: 680px) {
  .nav-button {
    width: 100%;
  }
}

@media (prefers-color-scheme: light) {
  .nav-button {
    /* color: var(--colour-blue-100); */
    border-color: var(--colour-blue-900);
  }
}

/* End of navigation -------------------------------------------------- */

/* Class which is attached to new floater instances' div */
.floater {
  display: flex;
  justify-content: center;
  align-items: center;
  width: 300px;
  height: 300px;
  /* background-color: rgb(238, 142, 9); set in the Floater script */
  border: 3px solid;
  color: #ca5811;
  border-radius: calc(var(--content-border-radius) * 2);
  padding: 20px;
}

/* For the iFrame that is attached to a FloaterIframe */
iframe {
  border: none;
  border-radius: var(--content-border-radius);
  top: 0;
  left: 0;
  height: 100%;
  width: 100%;
  overflow-y: auto !important;
}

/* For the content-holder of a FloaterInner as a little window */
.content-viewport {
  width: fit-content;
  border-radius: var(--content-border-radius);
  /* height: var(--content_viewport_height); */
  height: 100%;
  /* in case it get's taller than it's content... */
  align-content: center;
  overflow-y: auto;
  pointer-events: all !important;
}

.content-holder {
  border: none;
  height: fit-content;
  width: 100%;
  pointer-events: inherit;
}

.content-title {
  font-family: 'Special Elite', 'Courier New', Courier, monospace;
  font-size: clamp(1.8rem, min(2.8cqi, 3.5cqh), 3.4rem);
  width: 100%;
  height: fit-content;
  min-width: fit-content;
  /* max-width: 100%;
  max-height: 100%; */
  /* text-wrap: nowrap; */
  text-align: center;
}

/* We want to change the floater's styling when it's being used as a FloaterTitle */
.floater:has(.content-title) {
  /* This is the title floater */
  padding: 1rem;
  min-width: fit-content; /* belt and braces for if there's a word that is too long */
  /* min-height: calc-size(fit-content, size - 2rem); */
  /* This is so we can use container size units in our font-size clamp */
  container-type: inline-size;
}

.content-video {
  max-width: 100%;
  max-height: 100%;
  object-fit: contain;
  object-position: center;
}

.content-image {
  max-width: 100%;
  max-height: 100%;
  object-fit: contain;
  /* for the alt text we'll set the font really small */
  font-size: x-small;
  /* border-radius: calc(var(--content-border-radius) / 2); */
  border-radius: min(1vw, 1vh);
}

header,
footer {
  display: flex;
  text-wrap: balance;
  justify-content: space-between;
  align-items: center;
  padding-left: 2rem;
  padding-right: 1rem;
  gap: 2rem;
  /* This is how you can set the dark mode colour scheme if it's selected on the user's system (see the @media query at the bottom for how this is used) */
  color-scheme: dark;
  color: var(--header-footer-time-colour-text);
  background-color: var(--header-footer-time-colour);
  /* font-size: 2rem; */
}

header {
  border-bottom: 2px solid var(--header-footer-time-colour-text);
}

footer {
  border-top: 2px solid var(--header-footer-time-colour-text);
}

@media (prefers-color-scheme: light) {
  button {
    background-color: #f9f9f9;
  }
}

@media (prefers-color-scheme: dark) {
  :root {
    /* change the background blue */
    --colour-blue-300: var(--colour-blue-600);
  }
}

@media screen and (max-width: 680px) {
  /* header, */
  footer {
    flex-direction: column;
    justify-content: center;
    padding: 0.5rem;
  }

  #copyright-text {
    display: none;
  }

  /* :root {
    --content_max_width: 80vw;
    --content_min_width: 50vw;
    --content_viewport_height: 50vh;
  } */
}

@media screen and (max-width: 480px) {
  #logo {
    /* stop the h2 logo from breaking across lines on small screens (mobile) */
    font-size: 160%;
  }
}
